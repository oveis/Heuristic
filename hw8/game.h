#ifndef game_h
#define game_h
#include <string>
#include <vector>
#include "someone.h"

using std::string;
using std::vector;

class Game {
public:
  Game(const char* plyName, int nFeatures);
  virtual ~Game();

  void getMRandomCands();  // Also calculate match score, store in @match_score_
  double calMatchScore(const double* candVect);  // @candVect must of len: nFeatures
  double calNoiseMatchScore(const double* candVect, const double* noiseArr);
  virtual void startGame();

  // For testing
  const double* getExactWArr_() const { return w_arr_; }
  void printLenNArr(const double* lenNArr) const;
  void printXXMatrWithScore() const;

protected:
  const int      n_features_;  // N value
  const int      m_srv_cand_;  // M value(Num of exact W candidates generated by srv)
  const string   ply_name_;  // Player I am in control
  double*        w_arr_;  // weight vector from Person
  double**       xx_matr_;  // M candidates generated by srv
  vector<double> match_score_;

private:
  Someone*       person_;
  Someone*       matcher_;
};

#endif  // game_h
